# -*- coding: utf-8 -*-
"""Web_Appi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z532Ho8nxChsyE2-Edk1jMTWHXQGQEa9
"""

# import libs
import streamlit as st
import cv2
import numpy as np
import skimage.io as io

logo = 'logo.png'
mouse= 'mouse.jpg'

# main page
st.set_page_config(page_title='Bring It', page_icon = logo , layout = 'wide', initial_sidebar_state = 'auto')
st.title('AruCo measuring')

# side bar
st.markdown(
    """
    <style>
    [data-testid="stSidebar"][aria-expanded="true"] . div:first-child{
        width: 350px
    }
    
    [data-testid="stSidebar"][aria-expanded="false"] . div:first-child{
        width: 350px
        margin-left: -350px
    }    
    </style>
    
    """,
    unsafe_allow_html=True,
	)
	
st.sidebar.title('Choose')
st.sidebar.subheader('Site Pages')




# using st.cache so streamlit runs the following function only once, and stores in chache (until changed)
@st.cache()

# take an image, and return a resized that fits our page
def image_resize(image, width=None, height=None, inter = cv2.INTER_AREA):
    dim = None
    (h,w) = image.shape[:2]
    
    if width is None and height is None:
        return image
    
    if width is None:
        r = width/float(w)
        dim = (int(w*r),height)
    
    else:
        r = width/float(w)
        dim = (width, int(h*r))
        
    # resize the image
    resized = cv2.resize(image, dim, interpolation=inter)
    
    return resized

	
# add dropdown to select pages on left
app_mode = st.sidebar.selectbox('Sizes',
                                  ['4x4', '5x5','6x6'])		

# About page
if app_mode == '4x4':
    st.markdown('In this app we will measure AruCo 4x4')
    
    
    # side bar
    st.markdown(
        """
        <style>
        [data-testid="stSidebar"][aria-expanded="true"] . div:first-child{
            width: 350px
        }
        [data-testid="stSidebar"][aria-expanded="false"] . div:first-child{
            width: 350px
            margin-left: -350px
        }    
        </style>
        """,
        unsafe_allow_html=True,


    )					  

	# folder path - input from user (since sometimes you students forget to change this :P)
	# mine (Yedidya) is: /content/drive/MyDrive/71254_2023/01_Lectures/Class07
	folder_path = input('What is your folder path for this project?\n') 

	# read an image
	image =io.imread(f'{folder_path}/images/tomato.jpg')
	grayscale = img_as_ubyte(rgb2gray(io.imread(f'{folder_path}/images/tomato.jpg')))
	plt.imshow(image)
	
	# Load Aruco detector
	parameters = cv2.aruco.DetectorParameters_create()
	aruco_dict = cv2.aruco.Dictionary_get(cv2.aruco.DICT_5X5_50)
	
	# Get Aruco marker
	corners, _, _ = cv2.aruco.detectMarkers(image, aruco_dict, parameters=parameters)
	
	# Draw polygon around the marker
	int_corners = np.int0(corners)
	cv2.polylines(image, int_corners, True, (0, 255, 0), 50)
	plt.imshow(image)
	
	# Aruco Area
	aruco_area = cv2.contourArea (corners[0])
	print('AruCo Area:',aruco_area, 'px')

	# Pixel to cm ratio
	pixel_cm_ratio = 5*5 / aruco_area# since the AruCo is 5*5 cm, so we devide 25 cm*cm by the number of pixels
	print('Ratio - Each pixel is',pixel_cm_ratio, 'cm*cm')
